#version 400 core

in vec2 out_texture_coords;
in vec3 surfaceNormal;
in vec3 lightVector;
in vec3 moonVector;

out vec4 out_color;

uniform sampler2D textureSampler;
uniform vec3 lightColor;

void main(void) {
	
	vec3 unitNormal = normalize(surfaceNormal);
	vec3 unitLightVector = normalize(lightVector);
	
	float product = dot(unitNormal, unitLightVector);
	float brightness = max(product, 0.1);
	vec3 diffuse = brightness * lightColor;
	
	
	vec3 unitMoonVector = normalize(moonVector);
	float prod = dot(unitNormal, unitMoonVector);
	float darkness = max(prod, 0.1);
	vec3 temp = darkness * lightColor;
	vec3 diffuseMoon = vec3(1-temp.x,1-temp.y,1-temp.z);
	
	out_color = vec4(diffuseMoon, 1.0) * vec4(diffuse, 1.0) * texture(textureSampler, out_texture_coords);
}